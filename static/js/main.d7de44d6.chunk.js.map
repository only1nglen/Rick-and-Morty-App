{"version":3,"sources":["components/Header.js","components/Home.js","apiConfig.js","components/MainCast.js","components/CharacterBio.js","components/Episode.js","components/EpisodeListing.js","components/App.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","href","Nav","Link","Home","className","src","alt","apiUrls","apiUrl","window","location","hostname","MainCast","state","characters","axios","get","then","res","setState","data","catch","console","error","characterList","this","map","character","key","id","to","name","Component","CharacterPage","status","img","episodes","props","match","params","bro","characterResponse","singleCharacter","episodeIdsString","episode","substring","lastIndexOf","listOfEpisodeValues","join","episodeResponse","image","epList","ep","epCount","length","Episode","airdate","sis","singleEpisode","characterIdsString","listOfCharIdsValues","air_date","charList","EpisodeListing","allEpisodes","all","episodeResponsePageOne","episodeResponsePageTwo","episodePageOne","results","episodePageTwo","concat","episodeList","App","exact","path","component","CharacterBio","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7de44d6.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n// import { Container, Row, Col } from 'react-bootstrap'\n\nconst Header = () => (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n        <Navbar.Brand href=\"#\">\n            Rick And Morty\n        </Navbar.Brand>\n        <Nav>\n            <Nav.Link href=\"#maincast\">Main Cast</Nav.Link>\n            <Nav.Link href=\"#episodelisting\">Episode Guide</Nav.Link>\n        </Nav>\n    </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            <img className=\"home-bg\" src=\"https://i.imgur.com/T7zWFIw.jpg\" alt=\"home-bg\"></img>\n        </div>\n    \n    )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://rickandmortyapi.com/api/',\n  development: 'http://localhost:3000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\n\nimport apiUrl from '../apiConfig'\n\nclass MainCast extends Component {\n    constructor() {\n        super()\n        this.state = {\n            characters:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`${apiUrl}character/1,2,3,4,5`)\n        // .then(res => console.log(res.data))\n        .then(res => \n            this.setState ({\n            characters: res.data\n        }))\n        .catch(console.error)\n    }\n\n    render() {\n        const { characters } = this.state\n        const characterList = characters.map(character => (\n            <div key= {character.id}>\n                <Link to={`/characterbio/${character.id}`}>{character.name}</Link>\n            </div>\n        ))\n\n        return (\n            <div>\n                <h4>The Family </h4>\n                <div>\n                    {characterList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainCast;\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport apiUrl from '../apiConfig'\n\nclass CharacterPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name:\"\",\n            status:\"\",\n            img:\"\",\n            episodes: []\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/${this.props.match.params.bro}`)\n        const singleCharacter = characterResponse.data\n        // console.log(singleCharacter,\"single char\")\n        const episodeIdsString = singleCharacter.episode.map(episode => episode.substring(episode.lastIndexOf('/') + 1))\n        // console.log(episodeIdsString, 'string')\n        const listOfEpisodeValues = episodeIdsString.join(',')\n        // console.log(listOfEpisodeValues, 'listOfEpisodeValues')\n        const episodeResponse = await axios.get(`${apiUrl}episode/${listOfEpisodeValues}`)\n        // console.log(episodeResponse,\"episodeResponse\")\n        const episodes = episodeResponse.data\n        // console.log(episodes, \"episodes\")\n        this.setState ({\n            name: singleCharacter.name,\n            status: singleCharacter.status,\n            img: singleCharacter.image,\n            episodes: episodes\n        })\n    }\n\n    render() {\n        const { name, status, img, episodes} = this.state\n\n        const epList = episodes.map(ep => (\n            <div key={ep.id}>\n                    <Link to={`/episode/${ep.id}`}>\n                        <li>{ep.name}</li>\n                    </Link>\n            </div>\n        ))\n\n        const epCount = episodes.length\n\n        return (\n            <div>\n                <div>\n                    <img src={img} alt=\"pic of character\"></img>\n                </div>\n                    <div>\n                        Name: {name}\n                        <br />\n                        Status: {status}\n                        <br />\n                        Number of Episodes Appeared in: {epCount}\n                    </div>\n                <hr />\n                    <div>\n                        List of Episode Appearance:\n                        <ul>\n                            {epList}\n                        </ul>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default CharacterPage;\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport apiUrl from '../apiConfig'\n\nclass Episode extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name:\"\",\n            airdate:\"\",\n            episode:\"\",\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        // same as 'res'\n        const episodeResponse = await axios.get(`${apiUrl}episode/${this.props.match.params.sis}`)\n        // console.log(episodeResponse)\n        const singleEpisode = episodeResponse.data\n        const characterIdsString = singleEpisode.characters.map(character => character.substring(character.lastIndexOf('/') + 1))\n        // console.log(characterIdsString)\n        const listOfCharIdsValues = characterIdsString.join(',')\n        // console.log(listOfCharIdsValues)\n        // same as 'res'\n        const characterResponse = await axios.get(`${apiUrl}character/${listOfCharIdsValues}`)\n        const characters = characterResponse.data\n        // console.log(characters, \" chars\")\n        this.setState ({\n            name: singleEpisode.name,\n            airdate: singleEpisode.air_date,\n            episode: singleEpisode.episode,\n            characters\n        })\n    }\n\n    render() {\n        const { name, airdate, episode, characters } = this.state\n\n        const charList = characters.map(character => (\n            <div key={character.id}>\n                    <Link to={`/characterbio/${character.id}`}>\n                        <li>\n                            {/* <img src={character.image} alt={character.name}/>{character.name} */}\n                            {character.name}\n                        </li>\n                    </Link>\n            </div>\n        ))\n\n        return (\n            <div>\n                Episode name : {name}\n                <br />\n                    {episode}\n                <br />\n                    Air Date: {airdate}\n                <br />\n                <ul>\n                    Character Appearances: {charList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Episode\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport apiUrl from './../apiConfig'\n\nclass EpisodeListing extends Component {\n    constructor(){\n        super()\n        this.state = {\n            allEpisodes:[]\n        }\n    }\n\n   async componentDidMount() {\n        const [episodeResponsePageOne, episodeResponsePageTwo] = await axios.all([ \n            axios.get(`${apiUrl}/episode/?page=1`),\n            axios.get(`${apiUrl}/episode/?page=2`)\n        ])\n        // console.log(episodeResponsePageOne.data.results, episodeResponsePageTwo.data.results)\n        const episodePageOne = episodeResponsePageOne.data.results\n        const episodePageTwo = episodeResponsePageTwo.data.results\n        const allEpisodes = episodePageOne.concat(episodePageTwo)\n        // console.log(allEpisodes)\n        this.setState ({\n            allEpisodes\n        })\n    }\n\n    render(){\n        const { allEpisodes } = this.state\n\n        const episodeList = allEpisodes.map(episode => (\n            <div key={episode.id}>\n                <Link to={`/episode/${episode.id}`}>\n                    {episode.name}\n                </Link>\n            </div>\n        ))\n\n        return(\n            <div>\n                {episodeList}\n            </div>\n    )}\n}\n\nexport default EpisodeListing\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport Header from './Header'\nimport Home from './Home'\nimport MainCast from './MainCast'\nimport CharacterBio from './CharacterBio'\nimport Episode from './Episode'\nimport EpisodeListing from './EpisodeListing'\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Header />\n          <hr />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/maincast\" component={MainCast} />\n          <Route path=\"/characterbio/:bro\" component={CharacterBio} />\n          <Route path=\"/episodelisting\" component={EpisodeListing} />\n          <Route path=\"/episode/:sis\"  component={Episode} />\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}