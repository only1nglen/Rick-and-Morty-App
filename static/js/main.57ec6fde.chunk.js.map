{"version":3,"sources":["components/Header.js","components/Home.js","apiConfig.js","components/MainCast.js","components/CharacterCard.js","components/CharacterBio.js","components/EpisodeCard.js","components/Episode.js","components/EpisodeListing.js","components/SearchForm.js","components/SearchResultCard.js","components/Search.js","components/App.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","href","Nav","Link","Home","Image","className","src","alt","fluid","apiUrls","apiUrl","window","location","hostname","MainCast","state","characters","axios","get","characterResponse","data","this","setState","characterList","map","character","key","id","Card","style","width","Img","image","Body","Title","name","Button","to","Component","CharacterCard","props","gender","status","Accordion","Toggle","as","eventKey","epCount","Collapse","Table","striped","bordered","hover","size","epList","CharacterPage","episodes","match","params","bro","singleCharacter","episodeIdsString","episode","substring","lastIndexOf","listOfEpisodeValues","join","episodeResponse","finalEpisodesList","temporaryEpisodeList","Array","isArray","push","makeAnArray","ep","length","EpisodeCard","airdate","charList","Episode","sis","singleEpisode","characterIdsString","listOfCharIdsValues","air_date","EpisodeListing","allEpisodes","all","episodeResponsePageOne","episodeResponsePageTwo","episodePageOne","results","episodePageTwo","concat","episodeList","SearchForm","Form","onSubmit","inline","Label","htmlFor","srOnly","Control","type","placeholder","value","query","onChange","display","gotNoResults","searched","SearchResultCard","SearchBar","event","updatedField","target","searchInput","Object","assign","preventDefault","url","method","then","res","info","catch","err","console","log","App","exact","path","component","CharacterBio","Search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57ec6fde.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n// import { Container, Row, Col } from 'react-bootstrap'\n\nconst Header = () => (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n        <Navbar.Brand href=\"#\">\n            Rick And Morty\n        </Navbar.Brand>\n        <Nav>\n            <Nav.Link href=\"#maincast\">Main Cast</Nav.Link>\n            <Nav.Link href=\"#episodelisting\">Episode Guide</Nav.Link>\n            <Nav.Link href=\"#search\">Character Search</Nav.Link>\n        </Nav>\n    </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nimport Image from 'react-bootstrap/Image'\n\nconst Home = () => {\n    return (\n        <div>\n            <Image className=\"home-bg\" src=\"https://i.imgur.com/T7zWFIw.jpg\" alt=\"home-bg\" fluid />\n        </div>\n    \n    )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://rickandmortyapi.com/api/',\n  development: 'http://localhost:3000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport apiUrl from '../apiConfig'\n\nclass MainCast extends Component {\n    constructor() {\n        super()\n        this.state = {\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/1,2,3,4,5`)\n        const characters = characterResponse.data\n        this.setState ({\n            characters\n        })\n    }\n\n    render() {\n        const { characters } = this.state\n        const characterList = characters.map(character => (\n            <div key= {character.id}>\n                <Card className=\"char-card\" style={{ width: '14rem' }}>\n                    <Card.Img variant=\"top\" src={character.image} />\n                    <Card.Body>\n                        <Card.Title>{character.name}</Card.Title>\n                        <Button variant=\"outline-success\">\n                            <Link to={`/characterbio/${character.id}`}>More Info</Link>\n                        </Button>\n                    </Card.Body>\n                </Card>\n            </div>\n        ))\n\n        return (\n            <div>\n                <h1 className=\"main-cast-title\">The Family </h1>\n                <div className=\"main-cast\">\n                    {characterList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainCast\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Table from 'react-bootstrap/Table'\n\nfunction CharacterCard(props) {\n    return (\n        <div className=\"char-bio-page\">\n            <Card className=\"char-card\" style={{ width: '16rem' }}>\n                <Card.Img variant=\"top\" src={props.character.image} />\n                <Card.Body>\n                    <Card.Title>{props.character.name}</Card.Title>\n                    <div>Gender: {props.character.gender}</div>\n                    <div>Status: {props.character.status}</div>\n                </Card.Body>\n            </Card>\n\n            <Accordion>\n                <Card className=\"episode-accordion\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <div>{props.epCount} Episode Appearances</div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body variant=\"dark\">\n                            <Table striped bordered hover \n                                    size=\"sm\" \n                                    variant=\"dark\">\n                                    <tbody>\n                                        {props.epList}\n                                    </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n\n    )\n}\n\nexport default CharacterCard\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport CharacterCard from './CharacterCard'\nimport apiUrl from '../apiConfig'\n\nclass CharacterPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            character:\"\",\n            episodes: []\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/${this.props.match.params.bro}`)\n        const singleCharacter = characterResponse.data\n        // console.log(singleCharacter,\"single char\")\n        const episodeIdsString = singleCharacter.episode.map(episode => episode.substring(episode.lastIndexOf('/') + 1))\n        // console.log(episodeIdsString, 'string')\n        const listOfEpisodeValues = episodeIdsString.join(',')\n        // console.log(listOfEpisodeValues, 'listOfEpisodeValues')\n        const episodeResponse = await axios.get(`${apiUrl}episode/${listOfEpisodeValues}`)\n        // console.log(episodeResponse,\"episodeResponse\")\n        const episodes = episodeResponse.data\n        const makeAnArray = function(episodes) {\n            let temporaryEpisodeList=[]\n            if(!Array.isArray(episodes)){\n                temporaryEpisodeList.push(episodes)\n                return temporaryEpisodeList\n            }else {\n                return episodes\n            }\n        }\n        const finalEpisodesList = makeAnArray(episodes)\n        this.setState ({\n            episodes: finalEpisodesList,\n            character: singleCharacter\n        })\n    }\n\n    render() {\n        const { character, episodes} = this.state\n\n        const epList = episodes.map(ep => (\n            <tr key={ep.id}>\n                <td>\n                    <Link to={`/episode/${ep.id}`}>\n                    {ep.name}\n                    </Link>\n                </td>\n            </tr>\n        ))\n        \n        const epCount = episodes.length\n\n        return (\n            <div>\n                <CharacterCard  \n                    character={character}\n                    epCount={epCount} \n                    epList={epList}\n                />\n            </div>\n        );\n    }\n}\n\nexport default CharacterPage;\n","import React from 'react'\n\nfunction EpisodeCard(props){\n    return(\n        <div className=\"episode-card\">\n            <div>Name: {props.name}</div>\n            <div>{props.episode}</div>\n            <div>Air Date: {props.airdate}</div>\n            <div>Character Appearances: <ul>{props.charList}</ul></div>\n        </div>       \n    )\n}\n\nexport default EpisodeCard\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport EpisodeCard from './EpisodeCard'\nimport apiUrl from '../apiConfig'\n\nclass Episode extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name:\"\",\n            airdate:\"\",\n            episode:\"\",\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        // same as 'res'\n        const episodeResponse = await axios.get(`${apiUrl}episode/${this.props.match.params.sis}`)\n        // console.log(episodeResponse)\n        const singleEpisode = episodeResponse.data\n        const characterIdsString = singleEpisode.characters.map(character => character.substring(character.lastIndexOf('/') + 1))\n        // console.log(characterIdsString)\n        const listOfCharIdsValues = characterIdsString.join(',')\n        // console.log(listOfCharIdsValues)\n        // same as 'res'\n        const characterResponse = await axios.get(`${apiUrl}character/${listOfCharIdsValues}`)\n        const characters = characterResponse.data\n        // console.log(characters, \" chars\")\n        this.setState ({\n            name: singleEpisode.name,\n            airdate: singleEpisode.air_date,\n            episode: singleEpisode.episode,\n            characters\n        })\n    }\n\n    render() {\n        const { name, airdate, episode, characters } = this.state\n\n        const charList = characters.map(character => (\n            <div key={character.id}>\n                    <Link to={`/characterbio/${character.id}`}>\n                        <li>\n                            {/* <img src={character.image} alt={character.name}/>{character.name} */}\n                            {character.name}\n                        </li>\n                    </Link>\n            </div>\n        ))\n\n        return (\n            <div>\n                <EpisodeCard\n                    name={name}\n                    episode={episode}\n                    airdate={airdate}\n                    charList={charList}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Episode\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Table from 'react-bootstrap/Table'\n\nimport apiUrl from './../apiConfig'\n\nclass EpisodeListing extends Component {\n    constructor(){\n        super()\n        this.state = {\n            allEpisodes:[]\n        }\n    }\n\n   async componentDidMount() {\n        const [episodeResponsePageOne, episodeResponsePageTwo] = await axios.all([ \n            axios.get(`${apiUrl}/episode/?page=1`),\n            axios.get(`${apiUrl}/episode/?page=2`)\n        ])\n        // console.log(episodeResponsePageOne.data.results, episodeResponsePageTwo.data.results)\n        const episodePageOne = episodeResponsePageOne.data.results\n        const episodePageTwo = episodeResponsePageTwo.data.results\n        const allEpisodes = episodePageOne.concat(episodePageTwo)\n        // console.log(allEpisodes)\n        this.setState ({\n            allEpisodes\n        })\n    }\n\n    render(){\n        const { allEpisodes } = this.state\n\n        // const episodeList = allEpisodes.map(episode => (\n        //     <div key={episode.id}>\n        //         <Link to={`/episode/${episode.id}`}>\n        //             {episode.name}\n        //         </Link>\n        //     </div>\n        // ))\n\n        const episodeList = allEpisodes.map(episode => (\n            <tr key={episode.id}>\n                    <td>{episode.id}</td>\n                    <td>\n                        <Link to={`/episode/${episode.id}`}>\n                            {episode.name}\n                        </Link>\n                    </td>\n            </tr>\n        ))\n\n        return(\n            <div className=\"table-container\">\n                <Table striped bordered hover \n                        size=\"sm\" \n                        variant=\"dark\"\n                        className=\"episode-table\" >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Title</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {episodeList}\n                    </tbody>\n                </Table>\n            </div>\n    )}\n}\n\nexport default EpisodeListing\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst SearchForm = (props) => (\n    <div>\n        <Form className='search-bar' onSubmit={props.onSubmit} inline>\n            <Form.Label htmlFor=\"query\" srOnly>\n                Name\n            </Form.Label>\n            <Form.Control\n                className=\"input mb-2 mr-sm-2\"\n                type=\"text\" \n                name=\"query\"\n                placeholder=\"enter name..\" \n                value={props.query}\n                onChange={props.onChange}\n            />\n            <Button variant=\"outline-warning\" className=\"search-button mb-2 mr-sm-2\" type=\"submit\">Search</Button>\n        </Form>\n        <div className=\"search-response\" style={{display: !props.gotNoResults && \"none\"}}>No Results for \"{props.searched.query}\"</div>\n    </div>\n)\n\nexport default SearchForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction SearchResultCard (props) {\n    // console.log(props, \"from result card\")\n\n    const results = props.character.map(character => (\n        <div key={character.id}>\n            <Card className=\"char-card\" style={{ width: '14rem' }}>\n                    <Card.Img variant=\"top\" src={character.image} />\n                    <Card.Body>\n                        <Card.Title>{character.name}</Card.Title>\n                        <Button variant=\"outline-success\">\n                            <Link to={`/characterbio/${character.id}`}>More Info</Link>\n                        </Button>\n                    </Card.Body>\n                </Card>\n        </div>\n    ))\n    \n    return (\n        <div className='result-container'>\n            {results}\n        </div>\n    )\n\n}\n\nexport default SearchResultCard\n","import React,  { Component }  from 'react'\nimport axios from 'axios'\n// import { Redirect, Link } from 'react-router-dom'\n\nimport apiUrl from '../apiConfig'\nimport SearchForm from './SearchForm'\nimport SearchResultCard from './SearchResultCard'\n// import SearchResult from './SearchResult'\n\n\nclass SearchBar extends Component {\n        constructor() {\n            super()\n            this.state = {\n                searched: {\n                    query: ''\n                },\n                    character:[],\n                    info:[],\n                    gotNoResults: false\n            }\n        }\n\n        onChange = event => {\n            const updatedField = { [event.target.name]: event.target.value }\n            const searchInput = Object.assign(this.state.searched, updatedField)\n            this.setState({ searched: searchInput })\n        }\n\n        // onSubmit = async event => {\n        //     event.preventDefault()\n\n        //     try {\n        //         const characterResponse = await axios.get(`${apiUrl}character/?page=1&name=${this.state.searched.query}`)\n        //         // console.log(characterResponse.data.results)\n\n        //         this.setState ({\n        //             character: characterResponse.data.results,\n        //             info: characterResponse.data.info\n        //         })\n        //     } catch {\n        //         this.setState ({\n        //           gotNoResults: true\n        //        })\n        //     }\n\n        // }\n        \n        onSubmit = event => {\n            event.preventDefault()\n\n            if(this.state.searched.query) {\n                axios({\n                url: `${apiUrl}character/?page=1&name=${this.state.searched.query}`,\n                method: 'GET'\n            })\n                .then(res => this.setState({\n                character: res.data.results,\n                info: res.data.info,\n                gotNoResults: false\n            }))\n            .catch(err => console.log(err, \"Try Again, Jerry\"))\n            .catch(this.setState ({\n                gotNoResults: true,\n            })\n            )\n            } else {\n                this.setState ({\n                    gotNoResults: true,\n                })\n            }\n        }\n\n        render() {\n\n            const { character, searched } = this.state\n            const { onChange, onSubmit } = this\n\n            // if (this.state.searchPreformed) {\n            //     return <Redirect to={\"searchresult/1\"} />\n            // }\n\n            return (\n            <div>\n                <div>\n                    <SearchForm\n                    character={character}\n                    searched={searched}\n                    gotNoResults={this.state.gotNoResults}\n                    onChange={onChange}\n                    onSubmit={onSubmit} />\n                </div>\n\n                {/* <div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.count} Results</div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.pages} Pages</div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.next}</div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.prev}</div>\n                </div> */}\n\n                <SearchResultCard character={character} />\n\n                {/* <SearchResult character={character} /> */}\n\n            </div>\n            )\n        }\n}\n\nexport default SearchBar\n\n// import React,  { useState }  from 'react'\n// import axios from 'axios'\n// import { Link, Redirect } from 'react-router-dom'\n\n// import apiUrl from '../apiConfig'\n\n// function Search () {\n\n//     const [query, setQuery] = useState('')\n    \n//     const [character, setCharacter] = useState([])\n\n//     const [info, setInfo] = useState([])\n    \n//         const onSubmit = async event => {\n//             event.preventDefault()\n//             console.log(event)\n    \n//             const characterResponse = await axios.get(`${apiUrl}character/?page=1&name=${query}`)\n//             // console.log(characterResponse.data.info)\n\n//             const nextStr = characterResponse.data.info.next\n\n//             const getNextNum = function(next) {\n//                 if (next) {\n//                     return nextStr.substring(48, 49)\n//                 } else {\n//                     return null\n//                 }\n//             }\n//             const nextPageNum = getNextNum(nextStr)\n//             console.log(nextPageNum)\n\n//             const prevStr = characterResponse.data.info.prev\n//             const getPrevNum = function(prev) {\n//                 if (prev) {\n//                     return prevStr.substring(48, 49)\n//                 } else {\n//                     return null\n//                 }\n//             }\n//             const prevPageNum = getPrevNum(prevStr)\n//             console.log(prevPageNum)\n\n//             setInfo(characterResponse.data.info)\n//             setCharacter(characterResponse.data.results)\n\n//             // try {\n//             //     const res = await fetch(`${apiUrl}character/?name=${query}`)\n//             //     const data = await res.json()\n//             //     setCharacter(data.results)\n//             // } catch(err){\n//             //     console.log(err)\n//             // }\n\n//             console.log(setCharacter, \"setCH\")\n\n//             const newSearchPage = function () {\n//                     if (setCharacter) {\n//                         return <Redirect to={`/searchresult/1`} />\n//             }\n//                 }\n//                 newSearchPage()\n//             }\n                \n\n//         const onChange = event => setQuery(event.target.value)\n\n//         return (\n           \n        \n\n//             <div>\n//                 <form className=\"form\" onSubmit={onSubmit}>\n//                     <label className=\"search-label\" htmlFor=\"query\">Search by Name </label>\n//                     <input className=\"input\" type=\"text\" name=\"query\" placeholder=\"enter name..\" \n//                         value={query}\n//                         onChange={onChange}/>\n//                     <button className=\"search-button\" type=\"submit\">Search</button>\n//                 </form>\n\n//                 <div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.count} Results</div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.pages} Pages</div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.next}</div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.prev}</div>\n//                 </div>\n\n//                 <div>\n//                     {character.map(character => (\n//                         <div className=\"result-card\" key={character.id}>\n//                             <Link to={`/characterbio/${character.id}`}>\n//                                 <img className=\"img-result\" src={character.image} alt={character.name}></img>\n//                             </Link> \n//                             <div>Name: {character.name}</div>\n//                             <div>Status: {character.status}</div>\n//                         </div>\n//                     ))}\n//                 </div>\n\n//             </div>\n                \n//         )\n//     }\n\n// export default Search\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport Header from './Header'\nimport Home from './Home'\nimport MainCast from './MainCast'\nimport CharacterBio from './CharacterBio'\nimport Episode from './Episode'\nimport EpisodeListing from './EpisodeListing'\nimport Search from './Search'\n// import SearchResult from './SearchResult'\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Header />\n          <hr />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/maincast\" component={MainCast} />\n          <Route path=\"/characterbio/:bro\" component={CharacterBio} />\n          <Route path=\"/episodelisting\" component={EpisodeListing} />\n          <Route path=\"/episode/:sis\"  component={Episode} />\n          <Route path=\"/search\"  component={Search} />\n          {/* <Route path=\"/searchresult/:dad\"  component={SearchResult} /> */}\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}