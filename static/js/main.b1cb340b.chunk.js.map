{"version":3,"sources":["components/Header.js","components/Home.js","apiConfig.js","components/MainCast.js","components/CharacterCard.js","components/CharacterBio.js","components/EpisodeCard.js","components/Episode.js","components/EpisodeGuide.js","components/SearchForm.js","components/SearchResultCard.js","components/Search.js","components/App.js","index.js"],"names":["Header","Navbar","bg","variant","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Home","Image","src","alt","fluid","apiUrls","apiUrl","window","location","hostname","MainCast","state","characters","axios","get","characterResponse","data","this","setState","characterList","map","character","key","Card","style","width","to","Img","image","Body","Title","name","Component","CharacterCard","props","gender","status","Accordion","as","eventKey","epCount","Table","striped","bordered","hover","size","epList","CharacterPage","episodes","match","params","bro","console","log","singleCharacter","episodeIdsString","episode","substring","lastIndexOf","listOfEpisodeValues","join","episodeResponse","finalEpisodesList","temporaryEpisodeList","Array","isArray","push","makeAnArray","ep","length","EpisodeCard","airdate","charList","Episode","sis","singleEpisode","characterIdsString","listOfCharIdsValues","air_date","EpisodeGuide","totalPages","allEpisodes","getTotalPages","info","pages","pageNum","episodeCall","episodeData","results","episodeList","SearchForm","Form","onSubmit","inline","Label","htmlFor","srOnly","Control","type","placeholder","value","query","onChange","Button","display","gotNoResults","searched","SearchResultCard","SearchBar","event","updatedField","target","searchInput","Object","assign","a","preventDefault","trim","charResponse","App","exact","path","component","CharacterBio","Search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1cb340b.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nconst Header = () => (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" sticky=\"top\">\n        <Navbar.Brand href=\"#\">\n            Rick And Morty\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n            <Nav.Link href=\"#maincast\">Main Cast</Nav.Link>\n            <Nav.Link href=\"#episodeguide\">Episode Guide</Nav.Link>\n            <Nav.Link href=\"#search\">Character Search</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n)\n\nexport default Header\n","import React from 'react'\nimport Image from 'react-bootstrap/Image'\n\nconst Home = () => {\n    return (\n        <div>\n            <Image className=\"home-bg\" src=\"https://i.imgur.com/T7zWFIw.jpg\" alt=\"home-bg\" fluid />\n        </div>\n    \n    )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://rickandmortyapi.com/api/',\n  development: 'http://localhost:3000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\n\nimport apiUrl from '../apiConfig'\n\nclass MainCast extends Component {\n    constructor() {\n        super()\n        this.state = {\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/1,2,3,4,5`)\n        const characters = characterResponse.data\n        this.setState ({\n            characters\n        })\n    }\n\n    render() {\n        const { characters } = this.state\n        const characterList = characters.map(character => (\n            <div key= {character.id}>\n                <Card className=\"char-card\" style={{ width: '14rem' }}>\n                    <Link to={`/characterbio/${character.id}`}>\n                        <Card.Img variant=\"top\" src={character.image} />\n                    </Link>\n                    <Card.Body>\n                        <Card.Title className=\"main-cast-title-card\">{character.name}</Card.Title>\n                    </Card.Body>\n                </Card>\n            </div>\n        ))\n\n        return (\n            <div>\n                <h1 className=\"main-cast-title\">The Family </h1>\n                <div className=\"main-cast\">\n                    {characterList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainCast\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Table from 'react-bootstrap/Table'\n\nfunction CharacterCard(props) {\n    return (\n        <div className=\"char-bio-page\">\n            <Card className=\"char-card\" style={{ width: '16rem' }}>\n                <Card.Img variant=\"top\" src={props.character.image} />\n                <Card.Body>\n                    <Card.Title className=\"char-card-name\">{props.character.name}</Card.Title>\n                    <div><span className=\"character-card-label\">Gender</span>: {props.character.gender}</div>\n                    <div><span className=\"character-card-label\">Status</span>: {props.character.status}</div>\n                    <div><span className=\"character-card-label\">Location</span>: {props.character.location.name}</div>\n                </Card.Body>\n            </Card>\n\n            <Accordion>\n                <Card className=\"episode-accordion\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <div className=\"ep-appearance-list-title\">{props.epCount} Episode Appearances</div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body variant=\"dark\">\n                            <Table striped bordered hover \n                                    size=\"sm\" \n                                    variant=\"dark\">\n                                    <tbody>\n                                        {props.epList}\n                                    </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n    )\n}\n\nexport default CharacterCard\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport CharacterCard from './CharacterCard'\nimport apiUrl from '../apiConfig'\n\nclass CharacterPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            character: null,\n            episodes: []\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/${this.props.match.params.bro}`)\n        console.log(this.props)\n        const singleCharacter = characterResponse.data\n        // console.log(singleCharacter,\"single char\")\n        const episodeIdsString = singleCharacter.episode.map(episode => episode.substring(episode.lastIndexOf('/') + 1))\n        // console.log(episodeIdsString, 'string')\n        const listOfEpisodeValues = episodeIdsString.join(',')\n        // console.log(listOfEpisodeValues, 'listOfEpisodeValues')\n        const episodeResponse = await axios.get(`${apiUrl}episode/${listOfEpisodeValues}`)\n        // console.log(episodeResponse,\"episodeResponse\")\n        const episodes = episodeResponse.data\n        const makeAnArray = function(episodes) {\n            let temporaryEpisodeList=[]\n            if(!Array.isArray(episodes)){\n                temporaryEpisodeList.push(episodes)\n                return temporaryEpisodeList\n            }else {\n                return episodes\n            }\n        }\n        const finalEpisodesList = makeAnArray(episodes)\n        this.setState ({\n            episodes: finalEpisodesList,\n            character: singleCharacter\n        })\n    }\n\n    render() {\n        const { character, episodes} = this.state\n\n        const epList = episodes.map(ep => (\n            <tr key={ep.id}>\n                <td>\n                    <Link to={`/episode/${ep.id}`}>\n                    {ep.name}\n                    </Link>\n                </td>\n            </tr>\n        ))\n        \n        const epCount = episodes.length\n\n        return (\n            <div>\n                {character && <CharacterCard  \n                    character={character}\n                    epCount={epCount} \n                    epList={epList}\n                />}\n            </div>\n        )\n    }\n}\n\nexport default CharacterPage\n","import React from 'react'\n\nfunction EpisodeCard(props){\n    return(\n        <div className=\"episode-card\">\n            <h2>{props.name}</h2>\n            <small>{props.episode}</small>\n            <div>Aired: {props.airdate}</div>\n            <hr />\n            <div className=\"cast-container\">\n                <div><h4>Cast</h4></div> \n                <div className=\"cast-box\">{props.charList}</div>\n            </div>\n        </div>       \n    )\n}\n\nexport default EpisodeCard\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport EpisodeCard from './EpisodeCard'\nimport apiUrl from '../apiConfig'\n\nclass Episode extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name:\"\",\n            airdate:\"\",\n            episode:\"\",\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        const episodeResponse = await axios.get(`${apiUrl}episode/${this.props.match.params.sis}`)\n        // console.log(episodeResponse)\n        const singleEpisode = episodeResponse.data\n        const characterIdsString = singleEpisode.characters.map(character => character.substring(character.lastIndexOf('/') + 1))\n        // console.log(characterIdsString)\n        const listOfCharIdsValues = characterIdsString.join(',')\n        // console.log(listOfCharIdsValues)\n        const characterResponse = await axios.get(`${apiUrl}character/${listOfCharIdsValues}`)\n        const characters = characterResponse.data\n        // console.log(characters, \" chars\")\n        this.setState ({\n            name: singleEpisode.name,\n            airdate: singleEpisode.air_date,\n            episode: singleEpisode.episode,\n            characters\n        })\n    }\n\n    render() {\n        const { name, airdate, episode, characters } = this.state\n\n        const charList = characters.map(character => (\n            <div key={character.id}>\n                    <Link to={`/characterbio/${character.id}`}>\n                            <img className='cast-image' src={character.image} alt={character.name}/>\n                    </Link>\n            </div>\n        ))\n\n        return (\n            <div>\n                <EpisodeCard\n                    name={name}\n                    episode={episode}\n                    airdate={airdate}\n                    charList={charList}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Episode\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Table from 'react-bootstrap/Table'\n\nimport apiUrl from '../apiConfig'\n\nclass EpisodeGuide extends Component {\n    constructor(){\n        super()\n        this.state = {\n            totalPages:'',\n            allEpisodes:[]\n        }\n    }\n\n    async componentDidMount() {\n        const getTotalPages = await axios.get(`${apiUrl}/episode`)\n        const totalPages = getTotalPages.data.info.pages\n\n        let pageNum = 0\n        let allEpisodes = []\n        do {\n            pageNum++\n            let episodeCall = await axios.get(`${apiUrl}/episode/?page=${pageNum}`)\n            let episodeData = episodeCall.data.results\n            allEpisodes.push(...episodeData)\n        }\n        while (pageNum < `${totalPages}`)\n\n        this.setState ({\n            allEpisodes,\n            totalPages\n        })\n    }\n\n    render(){\n        const { allEpisodes } = this.state\n\n        const episodeList = allEpisodes.map(episode => (\n            <tr key={episode.id}>\n                <td>{episode.id}</td>\n                <td>\n                    <Link to={`/episode/${episode.id}`}>\n                        {episode.name}\n                    </Link>\n                </td>\n            </tr>\n        ))\n\n        return(\n            <div className=\"table-container\">\n                <Table striped bordered hover \n                        size=\"sm\" \n                        variant=\"dark\"\n                        className=\"episode-table\" >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th><h5>Title</h5></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {episodeList}\n                    </tbody>\n                </Table>\n            </div>\n    )}\n}\n\nexport default EpisodeGuide\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst SearchForm = (props) => (\n    <div>\n        <Form className='search-bar' onSubmit={props.onSubmit} inline>\n            <Form.Label htmlFor=\"query\" srOnly>\n                Name\n            </Form.Label>\n            <Form.Control\n                className=\"input mb-2 mr-sm-2\"\n                type=\"text\" \n                name=\"query\"\n                placeholder=\"Search by Name..\" \n                value={props.query}\n                onChange={props.onChange}\n            />\n            <Button variant=\"outline-warning\" className=\"search-button mb-2 mr-sm-2\" type=\"submit\">Search</Button>\n        </Form>\n        <div className=\"search-response\" style={{display: !props.gotNoResults && \"none\"}}>No Results for \"{props.searched.query}\"</div>\n    </div>\n)\n\nexport default SearchForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\n\nfunction SearchResultCard (props) {\n    const results = props.character.map(character => (\n        <div key={character.id}>\n            <Card className=\"char-card\" style={{ width: '14rem' }}>\n            <Link to={`/characterbio/${character.id}`}>\n                <Card.Img variant=\"top\" src={character.image} />\n            </Link>\n                    <Card.Body>\n                        <Card.Title className=\"search-result-title-card\">{character.name}</Card.Title>\n                    </Card.Body>\n                </Card>\n        </div>\n    ))\n    \n    return (\n        <div className='result-container'>\n            {results}\n        </div>\n    )\n\n}\n\nexport default SearchResultCard\n","import React,  { Component }  from 'react'\nimport axios from 'axios'\n\nimport apiUrl from '../apiConfig'\nimport SearchForm from './SearchForm'\nimport SearchResultCard from './SearchResultCard'\n\nclass SearchBar extends Component {\n        constructor() {\n            super()\n            this.state = {\n                searched: {\n                    query: null\n                },\n                    character:[],\n                    gotNoResults: false\n            }\n        }\n\n        onChange = event => {\n            const updatedField = { [event.target.name]: event.target.value }\n            const searchInput = Object.assign(this.state.searched, updatedField)\n            this.setState({ searched: searchInput })\n        }\n\n        onSubmit = async event => {\n            event.preventDefault()\n\n            let pageNum = 0\n            let character = []\n\n            if (this.state.searched.query.trim() === '' ){\n                this.setState ({\n                    gotNoResults: true,\n                    character:[]\n                })\n            } else {\n                    try {\n                    const getTotalPages = await axios.get(`${apiUrl}/character/?name=${this.state.searched.query}`)\n                    const totalPages = getTotalPages.data.info.pages\n\n                    while (this.state.searched.query && pageNum < `${totalPages}`) {\n                        pageNum++\n                        const charResponse = await axios.get(`${apiUrl}character/?page=${pageNum}&name=${this.state.searched.query}`)\n                        character.push(...charResponse.data.results)\n                            this.setState({\n                            character,\n                            info: charResponse.data.info,\n                            gotNoResults: false\n                        })\n                    }\n                } catch {\n                        this.setState ({\n                            gotNoResults: true,\n                            character:[]\n                        })\n                }\n            }\n        }\n\n        render() {\n\n            const { character, searched } = this.state\n            const { onChange, onSubmit } = this\n\n            return (\n            <div>\n                <div>\n                    <SearchForm\n                    character={character}\n                    searched={searched}\n                    gotNoResults={this.state.gotNoResults}\n                    onChange={onChange}\n                    onSubmit={onSubmit} />\n                </div>\n\n                <SearchResultCard character={character} />\n\n            </div>\n            )\n        }\n}\n\nexport default SearchBar\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport Header from './Header'\nimport Home from './Home'\nimport MainCast from './MainCast'\nimport CharacterBio from './CharacterBio'\nimport Episode from './Episode'\nimport EpisodeGuide from './EpisodeGuide'\nimport Search from './Search'\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Header />\n          <hr />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/maincast\" component={MainCast} />\n          <Route path=\"/characterbio/:bro\" component={CharacterBio} />\n          <Route path=\"/episodeguide\" component={EpisodeGuide} />\n          <Route path=\"/episode/:sis\"  component={Episode} />\n          <Route path=\"/search\"  component={Search} />\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}