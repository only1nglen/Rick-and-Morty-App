{"version":3,"sources":["components/Header.js","components/Home.js","apiConfig.js","components/MainCast.js","components/CharacterCard.js","components/CharacterBio.js","components/EpisodeCard.js","components/Episode.js","components/EpisodeListing.js","components/SearchForm.js","components/SearchResultCard.js","components/Search.js","components/App.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","href","Nav","Link","Home","Image","className","src","alt","fluid","apiUrls","apiUrl","window","location","hostname","MainCast","state","characters","axios","get","characterResponse","data","this","setState","characterList","map","character","key","id","to","name","Component","CharacterCard","props","img","status","epCount","epList","CharacterPage","episodes","match","params","bro","singleCharacter","episodeIdsString","episode","substring","lastIndexOf","listOfEpisodeValues","join","episodeResponse","finalEpisodesList","temporaryEpisodeList","Array","isArray","push","makeAnArray","image","ep","length","EpisodeCard","airdate","charList","Episode","sis","singleEpisode","characterIdsString","listOfCharIdsValues","air_date","EpisodeListing","allEpisodes","all","episodeResponsePageOne","episodeResponsePageTwo","episodePageOne","results","episodePageTwo","concat","episodeList","SearchForm","onSubmit","htmlFor","type","placeholder","value","query","onChange","SearchResultCard","SearchBar","event","updatedField","target","searchInput","Object","assign","searched","preventDefault","url","method","then","res","info","gotNoResults","catch","err","console","log","App","exact","path","component","CharacterBio","Search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e855ea4.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n// import { Container, Row, Col } from 'react-bootstrap'\n\nconst Header = () => (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n        <Navbar.Brand href=\"#\">\n            Rick And Morty\n        </Navbar.Brand>\n        <Nav>\n            <Nav.Link href=\"#maincast\">Main Cast</Nav.Link>\n            <Nav.Link href=\"#episodelisting\">Episode Guide</Nav.Link>\n            <Nav.Link href=\"#search\">Character Search</Nav.Link>\n        </Nav>\n    </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nimport Image from 'react-bootstrap/Image'\n\nconst Home = () => {\n    return (\n        <div>\n            <Image className=\"home-bg\" src=\"https://i.imgur.com/T7zWFIw.jpg\" alt=\"home-bg\" fluid />\n        </div>\n    \n    )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://rickandmortyapi.com/api/',\n  development: 'http://localhost:3000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\n\nimport apiUrl from '../apiConfig'\n\nclass MainCast extends Component {\n    constructor() {\n        super()\n        this.state = {\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/1,2,3,4,5`)\n        const characters = characterResponse.data\n        this.setState ({\n            characters\n        })\n    }\n\n    render() {\n        const { characters } = this.state\n        const characterList = characters.map(character => (\n            <div key= {character.id}>\n                <Link to={`/characterbio/${character.id}`}>{character.name}</Link>\n            </div>\n        ))\n\n        return (\n            <div>\n                <h4>The Family </h4>\n                <div>\n                    {characterList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainCast\n","import React from 'react'\n\nfunction CharacterCard(props) {\n    return (\n        <div className=\"character-card\">\n            <img src={props.img} alt={props.name} />\n            <div>Name: {props.name}</div>\n            <div>Status: {props.status}</div>\n            <div>Appeared in {props.epCount} {(props.epCount > 1) ? 'Episodes' : 'Episode'}</div>\n            <hr />\n            <div>Appeared in :<ul>{props.epList}</ul></div>\n        </div>\n    )\n}\n\nexport default CharacterCard\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport CharacterCard from './CharacterCard'\nimport apiUrl from '../apiConfig'\n\nclass CharacterPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name:\"\",\n            status:\"\",\n            img:\"\",\n            episodes: []\n        }\n    }\n\n    async componentDidMount() {\n        const characterResponse = await axios.get(`${apiUrl}character/${this.props.match.params.bro}`)\n        const singleCharacter = characterResponse.data\n        // console.log(singleCharacter,\"single char\")\n        const episodeIdsString = singleCharacter.episode.map(episode => episode.substring(episode.lastIndexOf('/') + 1))\n        // console.log(episodeIdsString, 'string')\n        const listOfEpisodeValues = episodeIdsString.join(',')\n        // console.log(listOfEpisodeValues, 'listOfEpisodeValues')\n        const episodeResponse = await axios.get(`${apiUrl}episode/${listOfEpisodeValues}`)\n        // console.log(episodeResponse,\"episodeResponse\")\n        const episodes = episodeResponse.data\n        const makeAnArray = function(episodes) {\n            let temporaryEpisodeList=[]\n            if(!Array.isArray(episodes)){\n                temporaryEpisodeList.push(episodes)\n                return temporaryEpisodeList\n            }else {\n                return episodes\n            }\n        }\n        const finalEpisodesList = makeAnArray(episodes)\n        this.setState ({\n            name: singleCharacter.name,\n            status: singleCharacter.status,\n            img: singleCharacter.image,\n            episodes: finalEpisodesList\n        })\n    }\n\n    render() {\n        const { name, status, img, episodes} = this.state\n\n        const epList = episodes.map(ep => (\n            <div key={ep.id}>\n                    <Link to={`/episode/${ep.id}`}>\n                        <li>{ep.name}</li>\n                    </Link>\n            </div>\n        ))\n\n        const epCount = episodes.length\n\n        return (\n            <div>\n                    <CharacterCard  \n                        img ={img} \n                        name={name} \n                        status={status} \n                        epCount={epCount} \n                        epList={epList}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default CharacterPage;\n","import React from 'react'\n\nfunction EpisodeCard(props){\n    return(\n        <div className=\"episode-card\">\n            <div>Name: {props.name}</div>\n            <div>{props.episode}</div>\n            <div>Air Date: {props.airdate}</div>\n            <div>Character Appearances: <ul>{props.charList}</ul></div>\n        </div>       \n    )\n}\n\nexport default EpisodeCard\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport EpisodeCard from './EpisodeCard'\nimport apiUrl from '../apiConfig'\n\nclass Episode extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name:\"\",\n            airdate:\"\",\n            episode:\"\",\n            characters:[]\n        }\n    }\n\n    async componentDidMount() {\n        // same as 'res'\n        const episodeResponse = await axios.get(`${apiUrl}episode/${this.props.match.params.sis}`)\n        // console.log(episodeResponse)\n        const singleEpisode = episodeResponse.data\n        const characterIdsString = singleEpisode.characters.map(character => character.substring(character.lastIndexOf('/') + 1))\n        // console.log(characterIdsString)\n        const listOfCharIdsValues = characterIdsString.join(',')\n        // console.log(listOfCharIdsValues)\n        // same as 'res'\n        const characterResponse = await axios.get(`${apiUrl}character/${listOfCharIdsValues}`)\n        const characters = characterResponse.data\n        // console.log(characters, \" chars\")\n        this.setState ({\n            name: singleEpisode.name,\n            airdate: singleEpisode.air_date,\n            episode: singleEpisode.episode,\n            characters\n        })\n    }\n\n    render() {\n        const { name, airdate, episode, characters } = this.state\n\n        const charList = characters.map(character => (\n            <div key={character.id}>\n                    <Link to={`/characterbio/${character.id}`}>\n                        <li>\n                            {/* <img src={character.image} alt={character.name}/>{character.name} */}\n                            {character.name}\n                        </li>\n                    </Link>\n            </div>\n        ))\n\n        return (\n            <div>\n                <EpisodeCard\n                    name={name}\n                    episode={episode}\n                    airdate={airdate}\n                    charList={charList}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Episode\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport apiUrl from './../apiConfig'\n\nclass EpisodeListing extends Component {\n    constructor(){\n        super()\n        this.state = {\n            allEpisodes:[]\n        }\n    }\n\n   async componentDidMount() {\n        const [episodeResponsePageOne, episodeResponsePageTwo] = await axios.all([ \n            axios.get(`${apiUrl}/episode/?page=1`),\n            axios.get(`${apiUrl}/episode/?page=2`)\n        ])\n        // console.log(episodeResponsePageOne.data.results, episodeResponsePageTwo.data.results)\n        const episodePageOne = episodeResponsePageOne.data.results\n        const episodePageTwo = episodeResponsePageTwo.data.results\n        const allEpisodes = episodePageOne.concat(episodePageTwo)\n        // console.log(allEpisodes)\n        this.setState ({\n            allEpisodes\n        })\n    }\n\n    render(){\n        const { allEpisodes } = this.state\n\n        const episodeList = allEpisodes.map(episode => (\n            <div key={episode.id}>\n                <Link to={`/episode/${episode.id}`}>\n                    {episode.name}\n                </Link>\n            </div>\n        ))\n\n        return(\n            <div>\n                {episodeList}\n            </div>\n    )}\n}\n\nexport default EpisodeListing\n","import React from 'react'\n\nconst SearchForm = (props) => (\n    <form className=\"form\" onSubmit={props.onSubmit}>\n        <label className=\"search-label\" htmlFor=\"query\">Search by Name </label>\n        <input \n            className=\"input\" \n            type=\"text\" \n            name=\"query\"\n            placeholder=\"enter name..\" \n            value={props.query}\n            onChange={props.onChange}\n        />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n    </form>\n)\n\nexport default SearchForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction SearchResultCard (props) {\n    // console.log(props, \"from result card\")\n\n    const results = props.character.map(character => (\n        <div className=\"result-card\" key={character.id}>\n            <Link to={`/characterbio/${character.id}`}>\n                <img className=\"img-result\" src={character.image} alt={character.name}></img>\n            </Link> \n            <div>Name: {character.name}</div>\n            <div>Status: {character.status}</div>\n        </div>\n    ))\n    \n    return (\n        <div>\n            {results}\n        </div>\n    )\n\n}\n\nexport default SearchResultCard\n","import React,  { Component }  from 'react'\nimport axios from 'axios'\n// import { Redirect, Link } from 'react-router-dom'\n\nimport apiUrl from '../apiConfig'\nimport SearchForm from './SearchForm'\nimport SearchResultCard from './SearchResultCard'\n// import SearchResult from './SearchResult'\n\n\nclass SearchBar extends Component {\n        constructor() {\n            super()\n            this.state = {\n                searched: {\n                    query: ''\n                },\n                    character:[],\n                    info:[],\n                    gotNoResults: false\n            }\n        }\n\n        onChange = event => {\n            const updatedField = { [event.target.name]: event.target.value }\n            const searchInput = Object.assign(this.state.searched, updatedField)\n            this.setState({ searched: searchInput })\n        }\n\n        // onSubmit = async event => {\n        //     event.preventDefault()\n\n        //     try {\n        //         const characterResponse = await axios.get(`${apiUrl}character/?page=1&name=${this.state.searched.query}`)\n        //         // console.log(characterResponse.data.results)\n\n        //         this.setState ({\n        //             character: characterResponse.data.results,\n        //             info: characterResponse.data.info\n        //         })\n        //     } catch {\n        //         this.setState ({\n        //           gotNoResults: true\n        //        })\n        //     }\n\n        // }\n        \n        onSubmit = event => {\n            event.preventDefault()\n\n            if(this.state.searched.query) {\n                axios({\n                url: `${apiUrl}character/?page=1&name=${this.state.searched.query}`,\n                method: 'GET'\n            })\n                .then(res => this.setState({\n                character: res.data.results,\n                info: res.data.info,\n                gotNoResults: false\n            }))\n            .catch(err => console.log(err, \"Try Again, Jerry\"))\n            .catch(this.setState ({\n                gotNoResults: true,\n            })\n            )\n            } else {\n                this.setState ({\n                    gotNoResults: true,\n                })\n            }\n        }\n\n        render() {\n\n            const { character } = this.state\n            const { onChange, onSubmit } = this\n\n            if (this.state.gotNoResults) {\n                // console.log(this.state.gotNoResults)\n                return  <div>\n                            <SearchForm  \n                                character={character}\n                                onChange={onChange}\n                                onSubmit={onSubmit} />\n                            <div>No Results</div>\n                        </div>\n            }\n\n            // if (this.state.searchPreformed) {\n            //     return <Redirect to={\"searchresult/1\"} />\n            // }\n\n            return (\n            <div>\n                <SearchForm  \n                    character={character}\n                    onChange={onChange}\n                    onSubmit={onSubmit} />\n\n                {/* <div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.count} Results</div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.pages} Pages</div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.next}</div>\n                    <div style={{display: !this.state.info.count && \"none\"}}>{this.state.info.prev}</div>\n                </div> */}\n\n                <SearchResultCard character={character} />\n\n                {/* <SearchResult character={character} /> */}\n\n            </div>\n            )\n        }\n}\n\nexport default SearchBar\n\n// import React,  { useState }  from 'react'\n// import axios from 'axios'\n// import { Link, Redirect } from 'react-router-dom'\n\n// import apiUrl from '../apiConfig'\n\n// function Search () {\n\n//     const [query, setQuery] = useState('')\n    \n//     const [character, setCharacter] = useState([])\n\n//     const [info, setInfo] = useState([])\n    \n//         const onSubmit = async event => {\n//             event.preventDefault()\n//             console.log(event)\n    \n//             const characterResponse = await axios.get(`${apiUrl}character/?page=1&name=${query}`)\n//             // console.log(characterResponse.data.info)\n\n//             const nextStr = characterResponse.data.info.next\n\n//             const getNextNum = function(next) {\n//                 if (next) {\n//                     return nextStr.substring(48, 49)\n//                 } else {\n//                     return null\n//                 }\n//             }\n//             const nextPageNum = getNextNum(nextStr)\n//             console.log(nextPageNum)\n\n//             const prevStr = characterResponse.data.info.prev\n//             const getPrevNum = function(prev) {\n//                 if (prev) {\n//                     return prevStr.substring(48, 49)\n//                 } else {\n//                     return null\n//                 }\n//             }\n//             const prevPageNum = getPrevNum(prevStr)\n//             console.log(prevPageNum)\n\n//             setInfo(characterResponse.data.info)\n//             setCharacter(characterResponse.data.results)\n\n//             // try {\n//             //     const res = await fetch(`${apiUrl}character/?name=${query}`)\n//             //     const data = await res.json()\n//             //     setCharacter(data.results)\n//             // } catch(err){\n//             //     console.log(err)\n//             // }\n\n//             console.log(setCharacter, \"setCH\")\n\n//             const newSearchPage = function () {\n//                     if (setCharacter) {\n//                         return <Redirect to={`/searchresult/1`} />\n//             }\n//                 }\n//                 newSearchPage()\n//             }\n                \n\n//         const onChange = event => setQuery(event.target.value)\n\n//         return (\n           \n        \n\n//             <div>\n//                 <form className=\"form\" onSubmit={onSubmit}>\n//                     <label className=\"search-label\" htmlFor=\"query\">Search by Name </label>\n//                     <input className=\"input\" type=\"text\" name=\"query\" placeholder=\"enter name..\" \n//                         value={query}\n//                         onChange={onChange}/>\n//                     <button className=\"search-button\" type=\"submit\">Search</button>\n//                 </form>\n\n//                 <div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.count} Results</div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.pages} Pages</div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.next}</div>\n//                     <div style={{display: !info.count && \"none\"}}>{info.prev}</div>\n//                 </div>\n\n//                 <div>\n//                     {character.map(character => (\n//                         <div className=\"result-card\" key={character.id}>\n//                             <Link to={`/characterbio/${character.id}`}>\n//                                 <img className=\"img-result\" src={character.image} alt={character.name}></img>\n//                             </Link> \n//                             <div>Name: {character.name}</div>\n//                             <div>Status: {character.status}</div>\n//                         </div>\n//                     ))}\n//                 </div>\n\n//             </div>\n                \n//         )\n//     }\n\n// export default Search\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport Header from './Header'\nimport Home from './Home'\nimport MainCast from './MainCast'\nimport CharacterBio from './CharacterBio'\nimport Episode from './Episode'\nimport EpisodeListing from './EpisodeListing'\nimport Search from './Search'\n// import SearchResult from './SearchResult'\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Header />\n          <hr />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/maincast\" component={MainCast} />\n          <Route path=\"/characterbio/:bro\" component={CharacterBio} />\n          <Route path=\"/episodelisting\" component={EpisodeListing} />\n          <Route path=\"/episode/:sis\"  component={Episode} />\n          <Route path=\"/search\"  component={Search} />\n          {/* <Route path=\"/searchresult/:dad\"  component={SearchResult} /> */}\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}